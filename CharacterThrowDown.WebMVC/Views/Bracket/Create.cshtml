@model CharacterThrowdown.Models.BracketCreate

@{
    ViewBag.Title = "Create";
}
<br />
<br />
<br />
<div class="bracketCreate">
    <h2>Tournament Time</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Choose your Contestants</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TournamentName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TournamentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TournamentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstCharacterEight.CharacterName, "Character 1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FirstCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <h5>vs</h5>
            <div class="form-group">
                @Html.LabelFor(model => model.SecondCharacterEight.CharacterName, "Character 2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SecondCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SecondCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.ThirdCharacterEight.CharacterName, "Character 3", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ThirdCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ThirdCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <h5>vs</h5>

            <div class="form-group">
                @Html.LabelFor(model => model.FourthCharacterEight.CharacterName, "Character 4", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FourthCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FourthCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.FifthCharacterEight.CharacterName, "Character 5", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FifthCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FifthCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <h5>vs</h5>

            <div class="form-group">
                @Html.LabelFor(model => model.SixthCharacterEight.CharacterName, "Character 6", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SixthCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SixthCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.SeventhCharacterEight.CharacterName, "Character 7", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SeventhCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SeventhCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>
            <h5>vs</h5>

            <div class="form-group">
                @Html.LabelFor(model => model.EighthCharacterEight.CharacterName, "Character 8", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EighthCharacterEightId", null, "--Please Select Character--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EighthCharacterEightId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
